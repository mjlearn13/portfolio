import { nanoid } from 'nanoid'
import vanLifeSquare from '../src/assets/vanlife-square.png'
import vanLife from '../src/assets/vanlife.png'
import notesAppSquare from '../src/assets/notes-app-square.png'
import notesApp from '../src/assets/notes-app.png'
import picSomeSquare from '../src/assets/pic-some-square.png'
import picSome from '../src/assets/pic-some.png'
import speedTypingGameSquare from '../src/assets/speedTypingGame-square.png'
import speedTypingGame from '../src/assets/speedTypingGame.png'
import tenziesSquare from '../src/assets/tenzies-square.png'
import tenzies from '../src/assets/tenzies.png'
import memeGenerator from '../src/assets/meme-generator.png'
import twimbaSquare from '../src/assets/twimba-square.png'
import twimba from '../src/assets/twimba.png'
import splashSquare from '../src/assets/splash-square.png'
import splash from '../src/assets/splash.png'
import paint from '../src/assets/paint.png'
import dragSquare from '../src/assets/drag-square.png'
import drag from '../src/assets/drag.png'
import calculator from '../src/assets/calculator.png'
import basketball from '../src/assets/basketball.png' 
import nasaSquare from '../src/assets/nasa-square.png'
import nasa from '../src/assets/nasa.png'
import spockSquare from '../src/assets/spock-square.png'
import spock from '../src/assets/spock.png'
import pong from '../src/assets/pong.png'
import video from '../src/assets/video.png'
import navigation from '../src/assets/navigation.png'
import template from '../src/assets/template.png'
import infinite from '../src/assets/infinite.png'
import joke from '../src/assets/joke.png'
import bookmark from '../src/assets/bookmark.png'
import countdown from '../src/assets/countdown.png'
import form from '../src/assets/form.png'
import math from '../src/assets/math-sprint.png'
import mode from '../src/assets/mode.png'
import music from '../src/assets/music-player.png'
import picture from '../src/assets/picture.png'
import quote from '../src/assets/quote.png'
import dashboard from '../src/assets/dashboard.png'
import lead from '../src/assets/lead.png'
import password from '../src/assets/password.png'



export default [
  {
    id: nanoid(),
    name: 'VANLIFE',
    url: 'https://inquisitive-zuccutto-886fd5.netlify.app/',
    imageSquare: vanLifeSquare,
    image: vanLife,
    type: 'React',
    github: 'https://github.com/mjlearn13/van-life.git',
    desc: 'VanLife is a single page web app for renting decked-out travel vans for your next road trip adventure!  It is built using React    Router v6, the most popular routing library for React applications and one of the most downloaded React support libraries ever. It was built as a part of Scrimbas Frontend Developer Career Path.',
    topics: [
      'Basic router setup',
      'Route',
      'Link',
      'Route parameters',
      'Nested routes and Outlet',
      'Layout and Index routes',
      'Relative paths',
      'NavLink',
      'Outlet context',
      'Search parameters',
      'Link state',
      '404 pageSplat routes',
      'Loaders',
      'Actions',
      'Form & form data',
      'defer( )',
      'Await',
      'Suspense',
      'Error handling & errorElement',
      'useRouteError',
      'useNavigate',
      'useNavigation',
      'useLocation',
      'useLoaderData',
      'useActionData',
      'Protected Routes',
      'Deploying with Netlify',
      'Using Firebase for data storage',
    ],
  },
  {
    id: nanoid(),
    name: 'Notes',
    url: 'https://voluble-brioche-cf4ae0.netlify.app/',
    imageSquare: notesAppSquare,
    image: notesApp,
    type: 'React',
    github: 'https://github.com/mjlearn13/notes-app.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Pic Some',
    url: 'https://deluxe-churros-f1e05b.netlify.app/',
    imageSquare: picSomeSquare,
    image: picSome,
    type: 'React',
    github: 'https://github.com/mjlearn13/pic-some.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Speed Typing',
    url: 'https://idyllic-cascaron-fc1a88.netlify.app/',
    imageSquare: speedTypingGameSquare,
    image: speedTypingGame,
    type: 'React',
    github: 'https://github.com/mjlearn13/speedTypingGame.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Tenzies',
    url: 'https://fastidious-chaja-ae6f30.netlify.app/',
    imageSquare: tenziesSquare,
    image: tenzies,
    type: 'React',
    github: 'https://github.com/mjlearn13/tenzies.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Meme Generator',
    url: 'https://benevolent-begonia-d8c730.netlify.app/',
    imageSquare: memeGenerator,
    image: memeGenerator,
    type: 'React',
    github: 'https://github.com/mjlearn13/meme-generator.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Twimba',
    url: 'https://mjlearn13.github.io/twitter-clone/',
    imageSquare: twimbaSquare,
    image: twimba,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/twitter-clone.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Splash',
    url: 'https://mjlearn13.github.io/splash-page/',
    imageSquare: splashSquare,
    image: splash,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/splash-page.git',
    desc: '',
    topics: ['DOM Basics'],
  },
  {
    id: nanoid(),
    name: 'Paint Clone',
    url: 'https://mjlearn13.github.io/paint-clone/',
    imageSquare: paint,
    image: paint,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/paint-clone.git',
    desc: '',
    topics: ['Advanced HTML Canvas', 'localStorage'],
  },
  {
    id: nanoid(),
    name: 'Kanban',
    url: 'https://mjlearn13.github.io/drag-and-drop/',
    imageSquare: dragSquare,
    image: drag,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/drag-and-drop.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Calculator',
    url: 'https://mjlearn13.github.io/calculator/',
    imageSquare: calculator,
    image: calculator,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/calculator.git',
    desc: '',
    topics: ['Math Methods'],
  },
  {
    id: nanoid(),
    name: 'Math Sprint Game',
    url: 'https://mjlearn13.github.io/math-sprint-game/',
    imageSquare: math,
    image: math,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/math-sprint-game.git',
    desc: '',
    topics: ['SetInterval', 'DOM', 'Array Methods', 'localStorage'],
  },
  {
    id: nanoid(),
    name: 'Nasa Api Pictures',
    url: 'https://mjlearn13.github.io/nasa-api-pictures/',
    imageSquare: nasaSquare,
    image: nasa,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/nasa-api-pictures.git',
    desc: '',
    topics: ['Fetch', 'Async/Await', 'NASA API', 'DOM', 'localStorage'],
  },
  {
    id: nanoid(),
    name: 'Spock Rock',
    url: 'https://mjlearn13.github.io/spock-rock-game/',
    imageSquare: spockSquare,
    image: spock,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/spock-rock-game.git',
    desc: '',
    topics: ['Confetti.js', 'Modules'],
  },
  {
    id: nanoid(),
    name: 'Pong',
    url: 'https://mjlearn13.github.io/pong/',
    imageSquare: pong,
    image: pong,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/pong.git',
    desc: '',
    topics: ['Advanced HTML Canvas'],
  },
  {
    id: nanoid(),
    name: 'Video Player',
    url: 'https://mjlearn13.github.io/video-player/',
    imageSquare: video,
    image: video,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/video-player.git',
    desc: '',
    topics: ['HTML 5 Video API'],
  },
  {
    id: nanoid(),
    name: 'Animated Navigation',
    url: 'https://mjlearn13.github.io/animated-navigation/',
    imageSquare: navigation,
    image: navigation,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/animated-navigation.git',
    desc: '',
    topics: ['CSS Animations'],
  },
  {
    id: nanoid(),
    name: 'Animated Template',
    url: 'https://mjlearn13.github.io/animated-template/',
    imageSquare: template,
    image: template,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/animated-template.git',
    desc: '',
    topics: ['Template', 'AOS.js'],
  },
  {
    id: nanoid(),
    name: 'Infinite Scroll',
    url: 'https://mjlearn13.github.io/infinite-scroll/',
    imageSquare: infinite,
    image: infinite,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/infinite-scroll.git',
    desc: 'Infinite Scroll is a mobile responsive, infinite scroll functionality web app.  A network request is made when we scroll to bottom of page, but it happens before we reach the bottom, so we donâ€™t see it. We are seamlessly scrolling forever. The photos are fetched from the unsplash api. We see a description when we hover over an image. If we click on an image we can see that image on the upsplash website so we can see the author or download the photo if we want.',
    topics: [
      'Fetch',
      'Async/Await',
      'Unsplash API',
      'DOM',
      'Scroll Event Listener',
      'Loading animation with loading.io ',
    ],
  },
  {
    id: nanoid(),
    name: 'Joke Teller',
    url: 'https://mjlearn13.github.io/joke-teller/',
    imageSquare: joke,
    image: joke,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/joke-teller.git',
    desc: '',
    topics: ['Fetch', 'Async/Await', 'Joke API', 'Text-to-Speech'],
  },
  {
    id: nanoid(),
    name: 'Bookmark',
    url: 'https://mjlearn13.github.io/bookmark-app/',
    imageSquare: bookmark,
    image: bookmark,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/bookmark-app.git',
    desc: '',
    topics: ['DOM', 'localStorage'],
  },
  {
    id: nanoid(),
    name: 'Custom Countdown',
    url: 'https://mjlearn13.github.io/custom-countdown/',
    imageSquare: countdown,
    image: countdown,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/custom-countdown.git',
    desc: '',
    topics: ['Date', 'localStorage'],
  },
  {
    id: nanoid(),
    name: 'Form Validation',
    url: 'https://mjlearn13.github.io/form-validation/',
    imageSquare: form,
    image: form,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/form-validation.git',
    desc: '',
    topics: ['DOM', 'Forms'],
  },
  {
    id: nanoid(),
    name: 'Basketball Scorecard',
    url: 'https://mjlearn13.github.io/basketball-scorecard/',
    imageSquare: basketball,
    image: basketball,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/basketball-scorecard.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Light/Dark Mode',
    url: 'https://mjlearn13.github.io/light-dark-mode/',
    imageSquare: mode,
    image: mode,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/light-dark-mode.git',
    desc: '',
    topics: ['DOM', 'localStorage'],
  },
  {
    id: nanoid(),
    name: 'Music Player',
    url: 'https://mjlearn13.github.io/music-player/',
    imageSquare: music,
    image: music,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/music-player.git',
    desc: '',
    topics: ['HTML 5 Audio API'],
  },
  {
    id: nanoid(),
    name: 'Picture In Picture',
    url: 'https://mjlearn13.github.io/picture-in-picture/',
    imageSquare: picture,
    image: picture,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/picture-in-picture.git',
    desc: 'Picture in Picture is designed for the desktop. Once picture-in-picture support is enabled we get a mini window on the bottom-right side of the screen by default, which we can move around. We then use the screen capture api to select a screen or a portion of a screen to capture in the form of a media stream. We can resize it, move it and it will always stay on top. ',
    topics: ['Picture-in-Picture API', 'Screen Capture API'],
  },
  {
    id: nanoid(),
    name: 'Quote Generator',
    url: 'https://mjlearn13.github.io/quote-generator/',
    imageSquare: quote,
    image: quote,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/quote-generator.git',
    desc: 'Quote Generator is a mobile responsive, random quote generator web app. It makes an asynchronous fetch request to a rest API in order to get the quotes. We deal with the â€˜corrs errorâ€™ by using a proxy api.  Use of a loader between prolonged new quote requests.  Twitter button which opens Twitter in a new tab and if you are logged in will allow you to Tweet. ',
    topics: ['Fetch', 'Async/Await', 'Quote API', 'CORS'],
  },
  {
    id: nanoid(),
    name: 'Dashboard',
    url: 'https://mjlearn13.github.io/dashboard/',
    imageSquare: dashboard,
    image: dashboard,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/dashboard.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Lead Tracker',
    url: 'https://mjlearn13.github.io/lead-tracker/',
    imageSquare: lead,
    image: lead,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/lead-tracker.git',
    desc: '',
    topics: [],
  },
  {
    id: nanoid(),
    name: 'Password Generator',
    url: 'https://mjlearn13.github.io/password-generator/',
    imageSquare: password,
    image: password,
    type: 'JavaScript',
    github: 'https://github.com/mjlearn13/password-generator.git',
    desc: '',
    topics: [],
  },
]

